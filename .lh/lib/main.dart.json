{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1667506102403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667506108155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n \n class MyApp extends StatelessWidget {\n   const MyApp({super.key});\n \n-  // This widget is the root of your application.\n   @override\n   Widget build(BuildContext context) {\n     return MaterialApp(\n       title: 'Flutter Demo',\n"
                },
                {
                    "date": 1667506119207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,17 +21,8 @@\n \n class MyHomePage extends StatefulWidget {\n   const MyHomePage({super.key, required this.title});\n \n-  // This widget is the home page of your application. It is stateful, meaning\n-  // that it has a State object (defined below) that contains fields that affect\n-  // how it looks.\n-\n-  // This class is the configuration for the state. It holds the values (in this\n-  // case the title) provided by the parent (in this case the App widget) and\n-  // used by the build method of the State. Fields in a Widget subclass are\n-  // always marked \"final\".\n-\n   final String title;\n \n   @override\n   State<MyHomePage> createState() => _MyHomePageState();\n@@ -41,13 +32,8 @@\n   int _counter = 0;\n \n   void _incrementCounter() {\n     setState(() {\n-      // This call to setState tells the Flutter framework that something has\n-      // changed in this State, which causes it to rerun the build method below\n-      // so that the display can reflect the updated values. If we changed\n-      // _counter without calling setState(), then the build method would not be\n-      // called again, and so nothing would appear to happen.\n       _counter++;\n     });\n   }\n \n"
                },
                {
                    "date": 1667506124578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,14 +38,8 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n-    // This method is rerun every time setState is called, for instance as done\n-    // by the _incrementCounter method above.\n-    //\n-    // The Flutter framework has been optimized to make rerunning build methods\n-    // fast, so that you can just rebuild anything that needs updating rather\n-    // than having to individually change instances of widgets.\n     return Scaffold(\n       appBar: AppBar(\n         // Here we take the value from the MyHomePage object that was created by\n         // the App.build method, and use it to set our appbar title.\n"
                },
                {
                    "date": 1667506132014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,15 +40,11 @@\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       appBar: AppBar(\n-        // Here we take the value from the MyHomePage object that was created by\n-        // the App.build method, and use it to set our appbar title.\n         title: Text(widget.title),\n       ),\n       body: Center(\n-        // Center is a layout widget. It takes a single child and positions it\n-        // in the middle of the parent.\n         child: Column(\n           // Column is also a layout widget. It takes a list of children and\n           // arranges them vertically. By default, it sizes itself to fit its\n           // children horizontally, and tries to be as tall as its parent.\n"
                },
                {
                    "date": 1667506143718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,22 +44,8 @@\n         title: Text(widget.title),\n       ),\n       body: Center(\n         child: Column(\n-          // Column is also a layout widget. It takes a list of children and\n-          // arranges them vertically. By default, it sizes itself to fit its\n-          // children horizontally, and tries to be as tall as its parent.\n-          //\n-          // Invoke \"debug painting\" (press \"p\" in the console, choose the\n-          // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\n-          // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\n-          // to see the wireframe for each widget.\n-          //\n-          // Column has various properties to control how it sizes itself and\n-          // how it positions its children. Here we use mainAxisAlignment to\n-          // center the children vertically; the main axis here is the vertical\n-          // axis because Columns are vertical (the cross axis would be\n-          // horizontal).\n           mainAxisAlignment: MainAxisAlignment.center,\n           children: <Widget>[\n             const Text(\n               'You have pushed the button this many times:',\n@@ -74,8 +60,8 @@\n       floatingActionButton: FloatingActionButton(\n         onPressed: _incrementCounter,\n         tooltip: 'Increment',\n         child: const Icon(Icons.add),\n-      ), // This trailing comma makes auto-formatting nicer for build methods.\n+      ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1667507183603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n \n   @override\n   Widget build(BuildContext context) {\n     return MaterialApp(\n+      debugShowCheckedModeBanner: false,\n       title: 'Flutter Demo',\n       theme: ThemeData(\n         primarySwatch: Colors.blue,\n       ),\n"
                },
                {
                    "date": 1667507209226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   @override\n   Widget build(BuildContext context) {\n     return MaterialApp(\n       debugShowCheckedModeBanner: false,\n-      title: 'Flutter Demo',\n+      title: 'Stocks',\n       theme: ThemeData(\n         primarySwatch: Colors.blue,\n       ),\n       home: const MyHomePage(title: 'Flutter Demo Home Page'),\n"
                },
                {
                    "date": 1667507347429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,61 +8,11 @@\n   const MyApp({super.key});\n \n   @override\n   Widget build(BuildContext context) {\n-    return MaterialApp(\n+    return const MaterialApp(\n       debugShowCheckedModeBanner: false,\n       title: 'Stocks',\n-      theme: ThemeData(\n-        primarySwatch: Colors.blue,\n-      ),\n-      home: const MyHomePage(title: 'Flutter Demo Home Page'),\n+      home: MyHomePage(),\n     );\n   }\n }\n-\n-class MyHomePage extends StatefulWidget {\n-  const MyHomePage({super.key, required this.title});\n-\n-  final String title;\n-\n-  @override\n-  State<MyHomePage> createState() => _MyHomePageState();\n-}\n-\n-class _MyHomePageState extends State<MyHomePage> {\n-  int _counter = 0;\n-\n-  void _incrementCounter() {\n-    setState(() {\n-      _counter++;\n-    });\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        title: Text(widget.title),\n-      ),\n-      body: Center(\n-        child: Column(\n-          mainAxisAlignment: MainAxisAlignment.center,\n-          children: <Widget>[\n-            const Text(\n-              'You have pushed the button this many times:',\n-            ),\n-            Text(\n-              '$_counter',\n-              style: Theme.of(context).textTheme.headline4,\n-            ),\n-          ],\n-        ),\n-      ),\n-      floatingActionButton: FloatingActionButton(\n-        onPressed: _incrementCounter,\n-        tooltip: 'Increment',\n-        child: const Icon(Icons.add),\n-      ),\n-    );\n-  }\n-}\n"
                },
                {
                    "date": 1667507496034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:flutter/material.dart';\n+import 'package:market_stock/widget_files/homepage.dart';\n \n void main() {\n   runApp(const MyApp());\n }\n@@ -11,8 +12,8 @@\n   Widget build(BuildContext context) {\n     return const MaterialApp(\n       debugShowCheckedModeBanner: false,\n       title: 'Stocks',\n-      home: MyHomePage(),\n+      home: HomePage(),\n     );\n   }\n }\n"
                },
                {
                    "date": 1667509309560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import 'package:flutter/material.dart';\n-import 'package:market_stock/widget_files/homepage.dart';\n+import 'package:market_stock/exports.dart';\n \n void main() {\n   runApp(const MyApp());\n }\n"
                },
                {
                    "date": 1667509329839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   @override\n   Widget build(BuildContext context) {\n     return const MaterialApp(\n       debugShowCheckedModeBanner: false,\n-      title: 'Stocks',\n+      title: 'Market Stocks',\n       home: HomePage(),\n     );\n   }\n }\n"
                },
                {
                    "date": 1667510430033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   const MyApp({super.key});\n \n   @override\n   Widget build(BuildContext context) {\n-    return const MaterialApp(\n+    return MaterialApp(\n       debugShowCheckedModeBanner: false,\n       title: 'Market Stocks',\n       home: HomePage(),\n     );\n"
                },
                {
                    "date": 1667521765618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   const MyApp({super.key});\n \n   @override\n   Widget build(BuildContext context) {\n-    return MaterialApp(\n+    return const MaterialApp(\n       debugShowCheckedModeBanner: false,\n       title: 'Market Stocks',\n       home: HomePage(),\n     );\n"
                },
                {
                    "date": 1667522160855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n import 'package:flutter/material.dart';\n import 'package:market_stock/exports.dart';\n+import 'package:market_stock/view_models/stock_view_model.dart';\n+import 'package:provider/provider.dart';\n \n void main() {\n-  runApp(const MyApp());\n+  runApp(MultiProvider(providers: [\n+    ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n+  ], child: const MyApp()));\n }\n \n class MyApp extends StatelessWidget {\n   const MyApp({super.key});\n"
                },
                {
                    "date": 1667522998096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n import 'package:flutter/material.dart';\n import 'package:market_stock/exports.dart';\n-import 'package:market_stock/view_models/stock_view_model.dart';\n-import 'package:provider/provider.dart';\n \n void main() {\n   runApp(MultiProvider(providers: [\n     ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n"
                },
                {
                    "date": 1667557539397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,52 @@\n+import 'dart:async';\n+\n import 'package:flutter/material.dart';\n import 'package:market_stock/exports.dart';\n+import 'package:internet_connection_checker/internet_connection_checker.dart';\n+import 'package:overlay_support/overlay_support.dart';\n \n void main() {\n   runApp(MultiProvider(providers: [\n     ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n   ], child: const MyApp()));\n }\n \n-class MyApp extends StatelessWidget {\n+class MyApp extends StatefulWidget {\n   const MyApp({super.key});\n \n   @override\n+  State<MyApp> createState() => _MyAppState();\n+}\n+\n+class _MyAppState extends State<MyApp> {\n+  bool hasInternet = false;\n+  late StreamSubscription subscription;\n+\n+  @override\n+  void initState() {\n+    subscription = InternetConnectionChecker().onStatusChange.listen((status) {\n+      final hasInternet = status == InternetConnectionStatus.connected;\n+      final color = hasInternet\n+          ? Colors.green.withOpacity(0.7)\n+          : Colors.red.withOpacity(0.7);\n+      final text = hasInternet ? 'Active Internet' : 'No Active Internet';\n+      setState(() {\n+        this.hasInternet = hasInternet;\n+        showSimpleNotification(\n+            Center(\n+              child: NormalText(\n+                text: text,\n+                color: Colors.white,\n+              ),\n+            ),\n+            background: color);\n+      });\n+    });\n+    super.initState();\n+  }\n+\n+  @override\n   Widget build(BuildContext context) {\n     return const MaterialApp(\n       debugShowCheckedModeBanner: false,\n       title: 'Market Stocks',\n"
                },
                {
                    "date": 1667558715028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,10 @@\n \n   @override\n   Widget build(BuildContext context) {\n     return const MaterialApp(\n-      debugShowCheckedModeBanner: false,\n-      title: 'Market Stocks',\n-      home: HomePage(),\n-    );\n+        debugShowCheckedModeBanner: false,\n+        title: 'Market Stocks',\n+        home: CircularProgressIndicator() //;HomePage(),\n+        );\n   }\n }\n"
                },
                {
                    "date": 1667558730045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,8 @@\n   Widget build(BuildContext context) {\n     return const MaterialApp(\n         debugShowCheckedModeBanner: false,\n         title: 'Market Stocks',\n-        home: CircularProgressIndicator() //;HomePage(),\n+        home: Center(child: CircularProgressIndicator()) //;HomePage(),\n         );\n   }\n }\n"
                },
                {
                    "date": 1667558777889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,10 @@\n \n   @override\n   Widget build(BuildContext context) {\n     return const MaterialApp(\n-        debugShowCheckedModeBanner: false,\n-        title: 'Market Stocks',\n-        home: Center(child: CircularProgressIndicator()) //;HomePage(),\n-        );\n+      debugShowCheckedModeBanner: false,\n+      title: 'Market Stocks',\n+      home: HomePage(),\n+    );\n   }\n }\n"
                },
                {
                    "date": 1667559237096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,13 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n-    return const MaterialApp(\n-      debugShowCheckedModeBanner: false,\n-      title: 'Market Stocks',\n-      home: HomePage(),\n+    return const OverlaySupport.global(\n+      child: MaterialApp(\n+        debugShowCheckedModeBanner: false,\n+        title: 'Market Stocks',\n+        home: HomePage(),\n+      ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1667560006379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import 'package:market_stock/exports.dart';\n import 'package:internet_connection_checker/internet_connection_checker.dart';\n import 'package:overlay_support/overlay_support.dart';\n \n-void main() {\n+void main() async {\n   runApp(MultiProvider(providers: [\n     ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n   ], child: const MyApp()));\n }\n"
                },
                {
                    "date": 1667560043888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import 'dart:async';\n+\n+import 'package:flutter/material.dart';\n+import 'package:market_stock/exports.dart';\n+import 'package:internet_connection_checker/internet_connection_checker.dart';\n+import 'package:overlay_support/overlay_support.dart';\n+\n+void main() async {\n+  WidgetsFlutterBinding.ensureInitialized();\n+  runApp(MultiProvider(providers: [\n+    ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n+  ], child: const MyApp()));\n+}\n+\n+class MyApp extends StatefulWidget {\n+  const MyApp({super.key});\n+\n+  @override\n+  State<MyApp> createState() => _MyAppState();\n+}\n+\n+class _MyAppState extends State<MyApp> {\n+  bool hasInternet = false;\n+  late StreamSubscription subscription;\n+\n+  @override\n+  void initState() {\n+    subscription = InternetConnectionChecker().onStatusChange.listen((status) {\n+      final hasInternet = status == InternetConnectionStatus.connected;\n+      final color = hasInternet\n+          ? Colors.green.withOpacity(0.7)\n+          : Colors.red.withOpacity(0.7);\n+      final text = hasInternet ? 'Active Internet' : 'No Active Internet';\n+      setState(() {\n+        this.hasInternet = hasInternet;\n+        showSimpleNotification(\n+            Center(\n+              child: NormalText(\n+                text: text,\n+                color: Colors.white,\n+              ),\n+            ),\n+            background: color);\n+      });\n+    });\n+    super.initState();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return const OverlaySupport.global(\n+      child: MaterialApp(\n+        debugShowCheckedModeBanner: false,\n+        title: 'Market Stocks',\n+        home: HomePage(),\n+      ),\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1667560060381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,62 +56,4 @@\n       ),\n     );\n   }\n }\n-import 'dart:async';\n-\n-import 'package:flutter/material.dart';\n-import 'package:market_stock/exports.dart';\n-import 'package:internet_connection_checker/internet_connection_checker.dart';\n-import 'package:overlay_support/overlay_support.dart';\n-\n-void main() async {\n-  runApp(MultiProvider(providers: [\n-    ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n-  ], child: const MyApp()));\n-}\n-\n-class MyApp extends StatefulWidget {\n-  const MyApp({super.key});\n-\n-  @override\n-  State<MyApp> createState() => _MyAppState();\n-}\n-\n-class _MyAppState extends State<MyApp> {\n-  bool hasInternet = false;\n-  late StreamSubscription subscription;\n-\n-  @override\n-  void initState() {\n-    subscription = InternetConnectionChecker().onStatusChange.listen((status) {\n-      final hasInternet = status == InternetConnectionStatus.connected;\n-      final color = hasInternet\n-          ? Colors.green.withOpacity(0.7)\n-          : Colors.red.withOpacity(0.7);\n-      final text = hasInternet ? 'Active Internet' : 'No Active Internet';\n-      setState(() {\n-        this.hasInternet = hasInternet;\n-        showSimpleNotification(\n-            Center(\n-              child: NormalText(\n-                text: text,\n-                color: Colors.white,\n-              ),\n-            ),\n-            background: color);\n-      });\n-    });\n-    super.initState();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return const OverlaySupport.global(\n-      child: MaterialApp(\n-        debugShowCheckedModeBanner: false,\n-        title: 'Market Stocks',\n-        home: HomePage(),\n-      ),\n-    );\n-  }\n-}\n"
                },
                {
                    "date": 1667560111796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import 'package:overlay_support/overlay_support.dart';\n \n void main() async {\n   WidgetsFlutterBinding.ensureInitialized();\n+\n   runApp(MultiProvider(providers: [\n     ChangeNotifierProvider<StockViewModel>(create: (_) => StockViewModel()),\n   ], child: const MyApp()));\n }\n"
                }
            ],
            "date": 1667506102403,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key, required this.title});\n\n  // This widget is the home page of your application. It is stateful, meaning\n  // that it has a State object (defined below) that contains fields that affect\n  // how it looks.\n\n  // This class is the configuration for the state. It holds the values (in this\n  // case the title) provided by the parent (in this case the App widget) and\n  // used by the build method of the State. Fields in a Widget subclass are\n  // always marked \"final\".\n\n  final String title;\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  int _counter = 0;\n\n  void _incrementCounter() {\n    setState(() {\n      // This call to setState tells the Flutter framework that something has\n      // changed in this State, which causes it to rerun the build method below\n      // so that the display can reflect the updated values. If we changed\n      // _counter without calling setState(), then the build method would not be\n      // called again, and so nothing would appear to happen.\n      _counter++;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // This method is rerun every time setState is called, for instance as done\n    // by the _incrementCounter method above.\n    //\n    // The Flutter framework has been optimized to make rerunning build methods\n    // fast, so that you can just rebuild anything that needs updating rather\n    // than having to individually change instances of widgets.\n    return Scaffold(\n      appBar: AppBar(\n        // Here we take the value from the MyHomePage object that was created by\n        // the App.build method, and use it to set our appbar title.\n        title: Text(widget.title),\n      ),\n      body: Center(\n        // Center is a layout widget. It takes a single child and positions it\n        // in the middle of the parent.\n        child: Column(\n          // Column is also a layout widget. It takes a list of children and\n          // arranges them vertically. By default, it sizes itself to fit its\n          // children horizontally, and tries to be as tall as its parent.\n          //\n          // Invoke \"debug painting\" (press \"p\" in the console, choose the\n          // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\n          // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\n          // to see the wireframe for each widget.\n          //\n          // Column has various properties to control how it sizes itself and\n          // how it positions its children. Here we use mainAxisAlignment to\n          // center the children vertically; the main axis here is the vertical\n          // axis because Columns are vertical (the cross axis would be\n          // horizontal).\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            const Text(\n              'You have pushed the button this many times:',\n            ),\n            Text(\n              '$_counter',\n              style: Theme.of(context).textTheme.headline4,\n            ),\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: _incrementCounter,\n        tooltip: 'Increment',\n        child: const Icon(Icons.add),\n      ), // This trailing comma makes auto-formatting nicer for build methods.\n    );\n  }\n}\n"
        }
    ]
}