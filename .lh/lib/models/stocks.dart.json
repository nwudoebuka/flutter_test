{
    "sourceFile": "lib/models/stocks.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1667511066115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667511201202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,7 @@\n-class Stocks {}\n+class Stocks {\n+  final symbol;\n+  final company;\n+  final price;\n+\n+  Stocks({this.company, this.price, this.symbol,})\n+}\n"
                },
                {
                    "date": 1667511436526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,15 @@\n-class Stocks {\n-  final symbol;\n-  final company;\n-  final price;\n+class StocksMarket {\n+  final String? symbol;\n+  final String? company;\n+  final int? price;\n \n-  Stocks({this.company, this.price, this.symbol,})\n+  StocksMarket({\n+    this.company,\n+    this.price,\n+    this.symbol,\n+  });\n+  static List getStocksMarket() {\n+    List<StocksMarket> stocks = <StocksMarket>[];\n+    return stocks;\n+  }\n }\n"
                },
                {
                    "date": 1667512004413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     this.company,\n     this.price,\n     this.symbol,\n   });\n-  static List getStocksMarket() {\n+  static List<StocksMarket> getStocksMarket() {\n     List<StocksMarket> stocks = <StocksMarket>[];\n     return stocks;\n   }\n }\n"
                },
                {
                    "date": 1667513116045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,7 +9,21 @@\n     this.symbol,\n   });\n   static List<StocksMarket> getStocksMarket() {\n     List<StocksMarket> stocks = <StocksMarket>[];\n+    stocks.add(\n+        StocksMarket(company: 'Apple Company', symbol: 'APPLE', price: 10000));\n+    stocks\n+        .add(StocksMarket(company: 'Microsoft', symbol: 'MSOFT', price: 9000));\n+    stocks.add(StocksMarket(company: 'Google', symbol: 'GOOG', price: 8000));\n+    stocks.add(StocksMarket(\n+        company: 'General Electronics', symbol: 'GE', price: 7000));\n+    stocks.add(StocksMarket(company: 'Home Depot', symbol: 'HE', price: 6000));\n+    stocks.add(\n+        StocksMarket(company: 'Evergeen Solar', symbol: 'EVR', price: 5000));\n+    stocks.add(StocksMarket(company: 'Facebook', symbol: 'FB', price: 4000));\n+    stocks.add(StocksMarket(company: 'Samsung', symbol: 'SAM', price: 3000));\n+    stocks.add(StocksMarket(company: 'Snapchat', symbol: 'SNAP', price: 2000));\n+    stocks.add(StocksMarket(company: 'Alphabet', symbol: 'ALPH', price: 5000));\n     return stocks;\n   }\n }\n"
                },
                {
                    "date": 1667523730120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,101 @@\n+// class StocksMarket {\n+//   final String? symbol;\n+//   final String? company;\n+//   final int? price;\n+\n+//   StocksMarket({\n+//     this.company,\n+//     this.price,\n+//     this.symbol,\n+//   });\n+//   static List<StocksMarket> getStocksMarket() {\n+//     List<StocksMarket> stocks = <StocksMarket>[];\n+//     stocks.add(\n+//         StocksMarket(company: 'Apple Company', symbol: 'APPLE', price: 10000));\n+//     stocks\n+//         .add(StocksMarket(company: 'Microsoft', symbol: 'MSOFT', price: 9000));\n+//     stocks.add(StocksMarket(company: 'Google', symbol: 'GOOG', price: 8000));\n+//     stocks.add(StocksMarket(\n+//         company: 'General Electronics', symbol: 'GE', price: 7000));\n+//     stocks.add(StocksMarket(company: 'Home Depot', symbol: 'HE', price: 6000));\n+//     stocks.add(\n+//         StocksMarket(company: 'Evergeen Solar', symbol: 'EVR', price: 5000));\n+//     stocks.add(StocksMarket(company: 'Facebook', symbol: 'FB', price: 4000));\n+//     stocks.add(StocksMarket(company: 'Samsung', symbol: 'SAM', price: 3000));\n+//     stocks.add(StocksMarket(company: 'Snapchat', symbol: 'SNAP', price: 2000));\n+//     stocks.add(StocksMarket(company: 'Alphabet', symbol: 'ALPH', price: 5000));\n+//     return stocks;\n+//   }\n+// }\n+\n+// To parse this JSON data, do\n+//\n+//     final stocksMarket = stocksMarketFromJson(jsonString);\n+\n+import 'dart:convert';\n+\n+StocksMarket stocksMarketFromJson(String str) =>\n+    StocksMarket.fromJson(json.decode(str));\n+\n+String stocksMarketToJson(StocksMarket data) => json.encode(data.toJson());\n+\n class StocksMarket {\n-  final String? symbol;\n-  final String? company;\n-  final int? price;\n-\n   StocksMarket({\n-    this.company,\n-    this.price,\n-    this.symbol,\n+    required this.data,\n   });\n-  static List<StocksMarket> getStocksMarket() {\n-    List<StocksMarket> stocks = <StocksMarket>[];\n-    stocks.add(\n-        StocksMarket(company: 'Apple Company', symbol: 'APPLE', price: 10000));\n-    stocks\n-        .add(StocksMarket(company: 'Microsoft', symbol: 'MSOFT', price: 9000));\n-    stocks.add(StocksMarket(company: 'Google', symbol: 'GOOG', price: 8000));\n-    stocks.add(StocksMarket(\n-        company: 'General Electronics', symbol: 'GE', price: 7000));\n-    stocks.add(StocksMarket(company: 'Home Depot', symbol: 'HE', price: 6000));\n-    stocks.add(\n-        StocksMarket(company: 'Evergeen Solar', symbol: 'EVR', price: 5000));\n-    stocks.add(StocksMarket(company: 'Facebook', symbol: 'FB', price: 4000));\n-    stocks.add(StocksMarket(company: 'Samsung', symbol: 'SAM', price: 3000));\n-    stocks.add(StocksMarket(company: 'Snapchat', symbol: 'SNAP', price: 2000));\n-    stocks.add(StocksMarket(company: 'Alphabet', symbol: 'ALPH', price: 5000));\n-    return stocks;\n-  }\n+\n+  final List<Datum> data;\n+\n+  factory StocksMarket.fromJson(Map<String, dynamic> json) => StocksMarket(\n+        data: List<Datum>.from(json[\"data\"].map((x) => Datum.fromJson(x))),\n+      );\n+\n+  Map<String, dynamic> toJson() => {\n+        \"data\": List<dynamic>.from(data.map((x) => x.toJson())),\n+      };\n }\n+\n+class Datum {\n+  Datum({\n+    required this.volume,\n+    required this.symbol,\n+    required this.exchange,\n+    required this.date,\n+  });\n+\n+  final int volume;\n+\n+  final String symbol;\n+  final String exchange;\n+  final String date;\n+\n+  factory Datum.fromJson(Map<String, dynamic> json) => Datum(\n+        volume: json[\"volume\"],\n+        symbol: json[\"symbol\"],\n+        exchange: json[\"exchange\"],\n+        date: json[\"date\"],\n+      );\n+\n+  Map<String, dynamic> toJson() => {\n+        \"volume\": volume,\n+        \"symbol\": symbol,\n+        \"exchange\": exchange,\n+        \"date\": date,\n+      };\n+}\n+\n+class Pagination {\n+  Pagination({\n+    required this.total,\n+  });\n+\n+  final int total;\n+\n+  factory Pagination.fromJson(Map<String, dynamic> json) => Pagination(\n+        total: json[\"total\"],\n+      );\n+\n+  Map<String, dynamic> toJson() => {\n+        \"total\": total,\n+      };\n+}\n"
                },
                {
                    "date": 1667524417452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,12 +69,12 @@\n   final String exchange;\n   final String date;\n \n   factory Datum.fromJson(Map<String, dynamic> json) => Datum(\n-        volume: json[\"volume\"],\n-        symbol: json[\"symbol\"],\n-        exchange: json[\"exchange\"],\n-        date: json[\"date\"],\n+        volume: json[\"volume\"] ?? 0,\n+        symbol: json[\"symbol\"] ?? '',\n+        exchange: json[\"exchange\"] ?? '',\n+        date: json[\"date\"] ?? '',\n       );\n \n   Map<String, dynamic> toJson() => {\n         \"volume\": volume,\n"
                },
                {
                    "date": 1667524631123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,4 @@\n-// class StocksMarket {\n-//   final String? symbol;\n-//   final String? company;\n-//   final int? price;\n-\n-//   StocksMarket({\n-//     this.company,\n-//     this.price,\n-//     this.symbol,\n-//   });\n-//   static List<StocksMarket> getStocksMarket() {\n-//     List<StocksMarket> stocks = <StocksMarket>[];\n-//     stocks.add(\n-//         StocksMarket(company: 'Apple Company', symbol: 'APPLE', price: 10000));\n-//     stocks\n-//         .add(StocksMarket(company: 'Microsoft', symbol: 'MSOFT', price: 9000));\n-//     stocks.add(StocksMarket(company: 'Google', symbol: 'GOOG', price: 8000));\n-//     stocks.add(StocksMarket(\n-//         company: 'General Electronics', symbol: 'GE', price: 7000));\n-//     stocks.add(StocksMarket(company: 'Home Depot', symbol: 'HE', price: 6000));\n-//     stocks.add(\n-//         StocksMarket(company: 'Evergeen Solar', symbol: 'EVR', price: 5000));\n-//     stocks.add(StocksMarket(company: 'Facebook', symbol: 'FB', price: 4000));\n-//     stocks.add(StocksMarket(company: 'Samsung', symbol: 'SAM', price: 3000));\n-//     stocks.add(StocksMarket(company: 'Snapchat', symbol: 'SNAP', price: 2000));\n-//     stocks.add(StocksMarket(company: 'Alphabet', symbol: 'ALPH', price: 5000));\n-//     return stocks;\n-//   }\n-// }\n-\n // To parse this JSON data, do\n //\n //     final stocksMarket = stocksMarketFromJson(jsonString);\n \n@@ -38,8 +8,41 @@\n     StocksMarket.fromJson(json.decode(str));\n \n String stocksMarketToJson(StocksMarket data) => json.encode(data.toJson());\n \n+class StocksMarketing {\n+  final String? symbol;\n+  final String? company;\n+  final int? price;\n+\n+  StocksMarketing({\n+    this.company,\n+    this.price,\n+    this.symbol,\n+  });\n+  static List<StocksMarketing> getStocksMarketing() {\n+    List<StocksMarketing> stocks = <StocksMarketing>[];\n+    stocks.add(StocksMarketing(\n+        company: 'Apple Company', symbol: 'APPLE', price: 10000));\n+    stocks.add(\n+        StocksMarketing(company: 'Microsoft', symbol: 'MSOFT', price: 9000));\n+    stocks.add(StocksMarketing(company: 'Google', symbol: 'GOOG', price: 8000));\n+    stocks.add(StocksMarketing(\n+        company: 'General Electronics', symbol: 'GE', price: 7000));\n+    stocks\n+        .add(StocksMarketing(company: 'Home Depot', symbol: 'HE', price: 6000));\n+    stocks.add(\n+        StocksMarketing(company: 'Evergeen Solar', symbol: 'EVR', price: 5000));\n+    stocks.add(StocksMarketing(company: 'Facebook', symbol: 'FB', price: 4000));\n+    stocks.add(StocksMarketing(company: 'Samsung', symbol: 'SAM', price: 3000));\n+    stocks\n+        .add(StocksMarketing(company: 'Snapchat', symbol: 'SNAP', price: 2000));\n+    stocks\n+        .add(StocksMarketing(company: 'Alphabet', symbol: 'ALPH', price: 5000));\n+    return stocks;\n+  }\n+}\n+\n class StocksMarket {\n   StocksMarket({\n     required this.data,\n   });\n"
                },
                {
                    "date": 1667525032460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,8 @@\n     required this.date,\n   });\n \n   final int volume;\n-\n   final String symbol;\n   final String exchange;\n   final String date;\n \n"
                }
            ],
            "date": 1667511066115,
            "name": "Commit-0",
            "content": "class Stocks {}\n"
        }
    ]
}